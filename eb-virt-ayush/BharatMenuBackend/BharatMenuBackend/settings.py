"""
Django settings for BharatMenuBackend project.

Generated by 'django-admin startproject' using Django 4.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os
from BharatMenuBackend.local_settings import OPENAI_API_KEY, OTP_API_KEY
from kombu.utils.url import safequote
import requests

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

JQUERY_URL = True

# STATIC_URL = '/static/'
# STATIC_ROOT = BASE_DIR / 'staticfiles'

# MEDIA_URL = '/media/'
# MEDIA_ROOT = BASE_DIR / 'mediafiles'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

OPENAI_API = OPENAI_API_KEY
OTP_API = OTP_API_KEY

USE_TZ = True
PHONENUMBER_DEFAULT_REGION = "IN"


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-vorlxbb=kyh!fn6cvat=_2&nl3rkoqn)2q=l+gme75e&o&l&@$'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'django-bharatmenuapp.eba-qq64mtbt.us-west-2.elasticbeanstalk.com', '127.0.0.1', 'bharatmenu.com', 'backend.bharatmenu.com', '1.0.0.127.in-addr.arpa', 'localhost:19006', 'localhost:19003', '10.0.2.2', '127.0.0.1:8000', '44.236.186.114']

# ALLOWED_HOSTS = ['*']

CSRF_TRUSTED_ORIGINS = ['http://localhost:5173']

try:
    internal_ip = requests.get('http://169.254.169.254/latest/meta-data/').text
except requests.exceptions.ConnectionError:
    pass
else:
    ALLOWED_HOSTS.append(internal_ip)
del requests


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'bharatMenuApp.apps.BharatmenuappConfig',
    'rest_framework',
    'django.contrib.postgres',
    "phonenumber_field",
    'storages',
    'knox',
    'rest_framework.authtoken',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        # 'rest_framework.authentication.BasicAuthentication',
        # 'rest_framework.authentication.SessionAuthentication',
        'knox.auth.TokenAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework_simplejwt.authentication.JWTTokenUserAuthentication',
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ],
}


# JWT

# AUTH0_DOMAIN = "127.0.0.1:8000"
# AUTH0_AUDIENCE = "https://dev-2hnipz5fgv5putia.us.auth0.com/api/v2/"

# SIMPLE_JWT = {
#     'ALGORITHM': 'RS256',
#     'JWK_URL': f'http://{AUTH0_DOMAIN}/.well-known/jwks.json',
#     'AUDIENCE': AUTH0_AUDIENCE,
#     'ISSUER': f'http://{AUTH0_DOMAIN}/',
#     'USER_ID_CLAIM': 'sub',
#     'AUTH_TOKEN_CLASSES': ('authz.tokens.Auth0Token',),
# }

# JWT_AUTH = {
#     'JWT_PAYLOAD_GET_USERNAME_HANDLER':
#         'bharatMenuApp.utils.jwt_get_username_from_payload_handler',
#     'JWT_DECODE_HANDLER':
#         'bharatMenuApp.utils.jwt_decode_token',
#     'JWT_ALGORITHM': 'RS256',
#     'JWT_AUDIENCE': '{AUTH0_AUDIENCE}',
#     'JWT_ISSUER': 'http://{AUTH0_DOMAIN}/',
#     'JWT_AUTH_HEADER_PREFIX': 'Bearer',
# }

CORS_ORIGIN_ALLOW_ALL = False

CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",
    "http://127.0.0.1:5173"
]
 
MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.RemoteUserMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'django.contrib.auth.backends.RemoteUserBackend',
]

ROOT_URLCONF = 'BharatMenuBackend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'BharatMenuBackend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases


if 'RDS_DB_NAME' in os.environ:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': os.environ['RDS_DB_NAME'],
            'USER': os.environ['RDS_USERNAME'],
            'PASSWORD': os.environ['RDS_PASSWORD'],
            'HOST': os.environ['RDS_HOSTNAME'],
            'PORT': os.environ['RDS_PORT'],
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


if 'AWS_STORAGE_BUCKET_NAME' in os.environ:
    STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
    DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

    AWS_STORAGE_BUCKET_NAME = os.environ['AWS_STORAGE_BUCKET_NAME']
    AWS_S3_REGION_NAME = os.environ['AWS_S3_REGION_NAME']

    AWS_S3_ACCESS_KEY_ID = os.environ['AWS_ACCESS_KEY_ID']
    AWS_S3_SECRET_ACCESS_KEY = os.environ['AWS_SECRET_ACCESS_KEY']

    CELERY_accept_content = ['application/json'] 
    CELERY_task_serializer = 'json' 

    CELERY_TASK_DEFAULT_QUEUE = 'Reminders' 
    CELERY_BROKER_URL = "sqs://" + os.environ['AWS_ACCESS_KEY_ID'] + ":" + os.environ['AWS_SECRET_ACCESS_KEY'] + "@"
    CELERY_BROKER_TRANSPORT_OPTIONS = { 
        "region": "us-west-2", 
        'predefined_queues': {
            'Reminders': {
                'url': 'https://sqs.us-west-2.amazonaws.com/072650463999/Reminders',
                'access_key_id': os.environ['AWS_ACCESS_KEY_ID'],
                'secret_access_key': os.environ['AWS_SECRET_ACCESS_KEY'],
            }
        }
    } 
    CELERY_RESULT_BACKEND = None

else:
    # your_project/settings.py
    CELERY_BROKER_URL = 'redis://127.0.0.1:6379/0'

    # your_project/settings.py
    CELERY_RESULT_BACKEND = 'redis://127.0.0.1:6379/0'


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

# if 'AWS_STORAGE_BUCKET_NAME' in os.environ:

#     aws_access_key = safequote(os.environ['AWS_ACCESS_KEY_ID'])
#     aws_secret_key = safequote(os.environ['AWS_SECRET_ACCESS_KEY'])

#     CELERY_BROKER_URL = "sqs://{aws_access_key}:{aws_secret_key}@".format(
#         aws_access_key=aws_access_key, aws_secret_key=aws_secret_key,
#     )

    # CELERY_BROKER_URL += "https://sqs.us-west-2.amazonaws.com/072650463999/Reminders"

# CELERY_RESULT_BACKEND = 'db+postgresql://bharatmenu:zapoff@2023@awseb-e-gjfrxkzqqx-stack-awsebrdsdatabase-na1ycvrfziby.ceuqnsrqx4p7.us-west-2.rds.amazonaws.com:5432/ebdb'

STATIC_URL = 'static/'
STATIC_ROOT = 'static'

AWS_S3_ADDRESSING_STYLE = "virtual"

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'